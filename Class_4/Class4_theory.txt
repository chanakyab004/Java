1.Stacis and Dynamic binding

  -->Static binding in Java occurs during Compile time while Dynamic binding occurs during Runtime.

  -->private, final and static methods and variables uses static binding and bonded by compiler while virtual methods are bonded during runtime based upon runtime object.

  -->Static binding uses Type(Class in Java) information for binding while Dynamic binding uses Object to resolve binding.

  -->Overloaded methods are bonded using static binding while overridden methods are bonded using dynamic binding at runtime.
2.

abstract Classes
	                                            Interfaces
-->abstract class can extend only 
one class or one abstract class at a time	--> interface can extend any number of interfaces at a time

-->abstract  class  can extend from a 
class or from an abstract class	                -->interface can extend only from an interface

-->abstract  class  can  have  both 
 abstract and concrete methods	                -->interface can  have only abstract methods

-->A class can extend only one
 abstract class	                                -->A class can implement any number of interfaces

--> In abstract class keyword ‘abstract’
 is mandatory to declare a method as an 
abstract					-->In an interface keyword ‘abstract’ is optional to declare a method as an abstract

-->abstract  class can have  protected , 
public and public abstract methods	        -->Interface can have only public abstract methods i.e. by default

-->abstract class can have  static, 
final  or static final  variable
 with any access specifier	                -->interface  can  have only static final (constant) variable i.e. by default
